<?xml version="1.0" encoding="UTF-8"?>
<project name="agenda" default="compilar">

	<property file="build.properties" />

	<target name="limpar">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/${classes.dir}" />
		<mkdir dir="${build.dir}/${classes.teste.dir}" />
	</target>

	<path id="classpath-compilacao">
		<fileset dir="WebContent/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="classpath-compilacao-teste">
		<path refid="classpath-compilacao" />

		<pathelement path="${build.dir}/${classes.dir}" />

		<fileset dir="lib-teste">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="classpath-execucao-teste">
		<path refid="classpath-compilacao-teste" />

		<pathelement path="${build.dir}/${classes.teste.dir}" />
	</path>

	<target name="compilar-teste" depends="compilar">
		<javac destdir="${build.dir}/${classes.teste.dir}" srcdir="src-teste">
			<classpath refid="classpath-compilacao-teste" />
		</javac>
	</target>

	<!-- Copiando recusos com copy, indicando para, de e quais arquivos a serem copiados -->
	<target name="copiar-recursos" depends="limpar">
		<copy todir="${build.dir}/${classes.dir}">
			<fileset dir="src">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>
	
	<!-- Rodando o build definindo variável ambiente como true
	ant -Dambiente.teste=true -->
	<target name="copiar-recursos-testes" depends="limpar" if="ambiente.teste">
	    <copy todir="${build.dir}/${classes.dir}">
	        <fileset dir="src-teste">
	            <include name="hibernate.cfg.xml"/>
	            <include name="log4j.xml"/>
	        </fileset> 
	    </copy>
	</target>

	<target name="compilar" depends="copiar-recursos-testes">
		<javac destdir="${build.dir}/${classes.dir}" srcdir="src">
			<classpath refid="classpath-compilacao" />
		</javac>
	</target>

	<target name="executar-teste" depends="compilar-teste">
		<junit showoutput="true" printsummary="true">
			<formatter type="plain" />
			<batchtest>
				<fileset dir="src-teste">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<classpath refid="classpath-execucao-teste" />
		</junit>
	</target>

	<!-- Gerando o empacotamento do projeto web, indicamos para qual arquivo será gerado
	e onde está o web.xml -->
	<target name="empacotar" depends="compilar">
		<war destfile="${build.dir}/agenda.war" webxml="WebContent/WEB-INF/web.xml">
			<fileset dir="WebContent" />
			<classes dir="${build.dir}/${classes.dir}" />
		</war>
	</target>

	<!-- Copiando o war gerado para o tomcat -->
	<target name="deploy-local" depends="empacotar">
		<copy file="${build.dir}/agenda.war" todir="/C:/MyPrograms/DevTools/WebServers/Apache/apache-tomcat-8.0.36/webapps" />
	</target>

	<!-- Executando o tomcat -->
	<target name="rodar-tomcat-local" depends="deploy-local">
		<exec executable="\C:\MyPrograms\DevTools\WebServers\Apache\apache-tomcat-8.0.36\bin\startup.bat" />
	</target>

	<!-- Parando o tomcat -->
	<target name="parar-tomcat-local">
		<exec executable="\C:\MyPrograms\DevTools\WebServers\Apache\apache-tomcat-8.0.36\bin\shutdown.bat" />
	</target>

	<target name="touch-war-no-servidor-remoto">
		<sshexec host="192.168.0.100" username="caelum" password="senhaSecreta" command="touch /pastaDeployRemoto/agenda.war" />
	</target>

	<target name="deploy-remoto">
		<scp file="build/agenda.war" todir="usuario@ip-do-servidor:/pastaDeployRemoto" password="senhaSecreta" trust="true" />
	</target>

</project>